---
- hosts: all
  remote_user: ec2-user
  become: yes
  vars:
    tutorial_user: demo-user
    tutorial_pass: plscdemo
    mysql_root_password: SuperSecretPassword
    dbdeployer_version: 1.1.1
    mysql_version: 5.7.21
    mysql_file: mysql-5.7.21-linux-glibc2.12-x86_64.tar.gz
    mysql_url: 'https://dev.mysql.com/get/Downloads/MySQL-5.7/{{ mysql_file }}'
    mysql_checksum: 'md5:69b1d94f33c05b73cf72d557e484e2dc'

    packages:
      - mysql57-server
      - percona-toolkit
      - strace
      - sysstat
      - htop
      - sysbench
      - tcpdump
      - innotop

  tasks:
    - name: Set hostname
      hostname:
        name=mysql

    - name: Add tutorial user
      user:
        name={{ tutorial_user }}
        password={{ tutorial_pass | password_hash('sha512') }}
        shell=/bin/bash
        update_password=on_create

    - name: Add tutorial user to sudoers
      lineinfile:
        dest=/etc/sudoers
        regexp="{{ tutorial_user }} ALL"
        line="{{ tutorial_user }} ALL=(ALL) NOPASSWD:ALL"
        state=present

    - name: set sshd config
      template:
        src: sshd_config.j2
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: '0600'
        validate: /usr/sbin/sshd -t -f %s
      register: sshdconfig

    - name: Reload SSH daemon
      service:
        name: sshd
        state: reloaded
      when: sshdconfig.changed

    - name: Install Percona repo
      yum:
        name: http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm
        state: present

    - name: Install packages
      yum:
        name: "{{ item }}"
        state: present
      with_items: "{{ packages }}"

    - name: delete /etc/mysqld
      file:
        name: /etc/mysql
        state: absent

    - name: delete /var/lib/mysql
      file:
        name: /var/lib/mysql
        state: absent

    - name: delete /root/.my.cnf
      file:
        name: /root/.my.cnf
        state: absent

    - name: set /etc/my.cnf
      template:
        src: etc-my.cnf.j2
        dest: /etc/my.cnf
        owner: root
        group: root
        mode: 0644

    - name: create /var/lib/mysql
      file:
        name: /var/lib/mysql
        state: directory
        owner: mysql
        group: mysql
        mode: 0755

    - name: create /var/tmp
      file:
        name: /var/tmp
        state: directory
        owner: root
        group: root
        mode: 0777

    - name: Start MySQL daemon
      service:
        name: mysqld
        state: started

    - name: Set root password
      shell: mysql -uroot -e 'alter user root@localhost identified with mysql_native_password by "{{ mysql_root_password }}"'
      args:
        executable: /bin/bash


    - name: Stop MySQL daemon
      service:
        name: mysqld
        state: stopped

# let's start breaking stuff

    - name: create /etc/mysql
      file:
        name: /etc/mysql
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: create /var/tmp
      file:
        name: /var/tmp
        state: directory
        owner: root
        group: root
        mode: 0770

    - name: set broken tmpdir my.cnf
      template:
        src: broken-tmpdir-my.cnf.j2
        dest: /etc/mysql/.my.cnf
        owner: root
        group: root
        mode: 0644

    - name: set broken my.cnf
      template:
        src: broken-etc-my.cnf.j2
        dest: /etc/my.cnf
        owner: root
        group: root
        mode: 0644

    - name: set broken /root/.my.cnf
      template:
        src: root-my.cnf.j2
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: 0644

    - name: set wrong permissions on user table
      file:
        name: '{{ item }}'
        owner: root
        group: root
        mode: 0640
      with_items:
        - /var/lib/mysql/mysql/user.frm
        - /var/lib/mysql/mysql/user.MYD
        - /var/lib/mysql/mysql/user.MYI

    - name: set wrong permissions on ib_logfile0
      file:
        name: '{{ item }}'
        owner: 42
        group: 42
        mode: 0640
      with_items:
        - /var/lib/mysql/ibdata1
        - /var/lib/mysql/ib_logfile0
        - /var/lib/mysql/ib_logfile1

    - name: unpack PS 56
      unarchive:
        src: files/ps_56.tar.gz
        dest: /var/lib/mysql
        owner: mysql
        group: mysql

    - file:
        name: /var/lib/mysql/mysql_upgrade_info
        state: absent

### Install and configure dbdeployer

    - name: Install DBdeployer
      unarchive:
        src: "https://github.com/datacharmer/dbdeployer/releases/download/{{ dbdeployer_version }}/dbdeployer-{{ dbdeployer_version }}.linux.tar.gz"
        dest: /usr/local/bin
        remote_src: yes

    - file:
        name: /usr/local/bin/dbdeployer
        state: link
        src: "/usr/local/bin/dbdeployer-{{ dbdeployer_version }}.linux"

    - file:
        name: '/home/{{ tutorial_user }}/opt/mysql'
        state: directory
        owner: '{{ tutorial_user }}'
        group: '{{ tutorial_user }}'
        recurse: true

    - name: download MySQL
      get_url:
        url: '{{ mysql_url}}'
        dest: '/home/{{ tutorial_user }}/{{ mysql_file }}'
        checksum: '{{ mysql_checksum }}'
      become_user: '{{ tutorial_user }}'

    - name: dbdeployer unpack mysql
      shell: '/usr/local/bin/dbdeployer unpack {{ mysql_file }}'
      args:
        executable: /bin/bash
        creates: '/home/{{ tutorial_user }}/opt/mysql/{{ mysql_version }}'
      become_user: '{{ tutorial_user }}'

    - name: install repl sandbox
      shell: '/usr/local/bin/dbdeployer deploy -n 2 --sandbox-directory=normal-repl replication {{ mysql_version }}'
      args:
        executable: /bin/bash
        creates: '/home/{{ tutorial_user }}/sandboxes/normal-repl'
      become_user: '{{ tutorial_user }}'

    - name: install gtid sandbox
      shell: '/usr/local/bin/dbdeployer deploy -n 2 --gtid --sandbox-directory=gtid-repl replication {{ mysql_version }}'
      args:
        executable: /bin/bash
        creates: '/home/{{ tutorial_user }}/sandboxes/gtid-repl'
      become_user: '{{ tutorial_user }}'
